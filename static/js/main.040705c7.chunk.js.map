{"version":3,"sources":["components/Form.js","components/ToDo.js","components/ToDoList.js","components/Filter.js","components/ThemeSwitcher.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","className","theme","value","input","onChange","e","setInput","target","type","name","id","placeholder","autoFocus","onClick","preventDefault","trim","match","setToDoList","toDoList","title","nanoid","completed","ToDo","useState","isEditing","setIsEditing","item","newName","setNewName","editToDo","editedToDoList","map","todo","viewTemplate","filter","editTemplate","onSubmit","liClass","ToDoList","TransitionGroup","filteredList","CSSTransition","key","timeout","classNames","Filter","handleFilter","setFilter","changeClass","setFilterBtnClass","all","active","useEffect","setFilteredList","filterBtnClass","ThemeSwitcher","setTheme","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.040705c7.chunk.js","sourcesContent":["import React from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst Form = (props) => {\n  const handleInput = (e) => {\n    props.setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (props.input.trim().match(/^\\S/)) {\n      props.setToDoList([\n        ...props.toDoList,\n        {\n          title: props.input,\n          id: nanoid(),\n          completed: false,\n        },\n      ]);\n      props.setInput(\"\");\n    }\n  };\n\n  return (\n    <form className={`input-form ${props.theme}`}>\n      <input\n        value={props.input}\n        onChange={handleInput}\n        type=\"text\"\n        name=\"input-text\"\n        id=\"input-text\"\n        placeholder=\"New To-Do...\"\n        className={`input-text ${props.theme}`}\n        autoFocus\n      />\n      <button\n        className={`addBtn ${props.theme}`}\n        onClick={handleSubmit}\n        type=\"submit\"\n      >\n        <i className=\"fas fa-plus\"></i>\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useState } from \"react\";\n\nconst ToDo = (props) => {\n  // State\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(props.item.title);\n\n  // Methods\n  const handleCompleted = () => {\n    props.setToDoList(\n      props.toDoList.map((item) => {\n        if (item.id === props.item.id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n        return item;\n      })\n    );\n  };\n\n  const handleDelete = () => {\n    props.setToDoList(\n      props.toDoList.filter((item) => item.id !== props.item.id)\n    );\n  };\n\n  const handleEditInput = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleEditCancel = () => {\n    setIsEditing(false);\n    setNewName(props.item.title);\n  };\n\n  const handleEditSubmit = (e) => {\n    e.preventDefault();\n    if (newName.trim().match(/^\\S/)) {\n      e.preventDefault();\n      editToDo(props.item.id, newName);\n      setIsEditing(false);\n    }\n  };\n\n  const editToDo = (id, newName) => {\n    const editedToDoList = props.toDoList.map((todo) => {\n      if (id === todo.id) {\n        return { ...todo, title: newName };\n      }\n      return todo;\n    });\n    props.setToDoList(editedToDoList);\n  };\n\n  const liClass = () => {\n    const className = `toDoList__item ${props.theme}`;\n    if (props.item.completed) {\n      return `toDoList__item ${props.theme} completed`;\n    }\n    return className;\n  };\n\n  // View Templates\n  const viewTemplate = (\n    <>\n      <p\n        className={\n          props.item.completed\n            ? `toDoList__item-title ${props.theme} completed`\n            : `toDoList__item-title ${props.theme}`\n        }\n      >\n        {props.item.title}\n      </p>\n      <div className={`btn-group ${props.theme}`}>\n        <button\n          className={`viewBtn edit ${props.theme}`}\n          onClick={() => setIsEditing(true)}\n        >\n          <i className=\"far fa-edit\"></i>\n        </button>\n        <button\n          className={`viewBtn trash ${props.theme}`}\n          onClick={handleDelete}\n        >\n          <i className=\"fas fa-trash-alt\"></i>\n        </button>\n        <button\n          className={\n            props.item.completed\n              ? `viewBtn check ${props.theme} completed`\n              : `viewBtn check ${props.theme}`\n          }\n          onClick={handleCompleted}\n        >\n          <i className=\"far fa-check-square\"></i>\n        </button>\n      </div>\n    </>\n  );\n\n  const editTemplate = (\n    <>\n      <form onSubmit={handleEditSubmit}>\n        <input\n          value={newName}\n          id=\"todo-edit\"\n          type=\"text\"\n          onChange={handleEditInput}\n          autoFocus\n        />\n        <div className={`btn-group ${props.theme}`}>\n          <button\n            className={`editBtn cancel ${props.theme}`}\n            type=\"button\"\n            onClick={handleEditCancel}\n          >\n            <i className=\"far fa-times-circle\"></i>\n          </button>\n          <button className={`editBtn submit ${props.theme}`} type=\"submit\">\n            <i className=\"far fa-check-circle\"></i>\n          </button>\n        </div>\n      </form>\n    </>\n  );\n\n  return (\n    <li className={liClass()}>{isEditing ? editTemplate : viewTemplate}</li>\n  );\n};\n\nexport default ToDo;\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport ToDo from \"./ToDo\";\n\nconst ToDoList = (props) => {\n  return (\n    <ul className={`toDoList ${props.theme}`}>\n      <TransitionGroup className=\"toDoList\">\n        {props.filteredList.map((item) => (\n          <CSSTransition\n            key={item.id}\n            timeout={500}\n            classNames=\"toDoList__item\"\n          >\n            <ToDo\n              item={item}\n              toDoList={props.toDoList}\n              setToDoList={props.setToDoList}\n              theme={props.theme}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </ul>\n  );\n};\n\nexport default ToDoList;\n","import React, { useEffect } from \"react\";\n\nconst Filter = (props) => {\n  const handleFilter = (e) => {\n    props.setFilter(e.target.value);\n    changeClass(e.target.value);\n  };\n\n  const changeClass = (filter) => {\n    switch (filter) {\n      case \"active\":\n        props.setFilterBtnClass({ all: \"\", active: \"__active\", completed: \"\" });\n        break;\n      case \"completed\":\n        props.setFilterBtnClass({ all: \"\", active: \"\", completed: \"__active\" });\n        break;\n      default:\n        props.setFilterBtnClass({ all: \"__active\", active: \"\", completed: \"\" });\n        break;\n    }\n  };\n\n  useEffect(() => {\n    switch (props.filter) {\n      case \"completed\":\n        props.setFilteredList(\n          props.toDoList.filter((todo) => todo.completed === true)\n        );\n        break;\n      case \"active\":\n        props.setFilteredList(\n          props.toDoList.filter((todo) => todo.completed === false)\n        );\n        break;\n      default:\n        props.setFilteredList(props.toDoList);\n    }\n  }, [props.filter, props.toDoList]);\n  return (\n    <div className={`filter ${props.theme}`}>\n      <ul>\n        <li>\n          <button\n            value=\"all\"\n            className={`filter-btn ${props.theme} ${props.filterBtnClass.all}`}\n            onClick={handleFilter}\n          >\n            All\n          </button>\n        </li>\n        <li>\n          <button\n            value=\"active\"\n            className={`filter-btn ${props.theme} ${props.filterBtnClass.active}`}\n            onClick={handleFilter}\n          >\n            Active\n          </button>\n        </li>\n        <li>\n          <button\n            value=\"completed\"\n            className={`filter-btn ${props.theme} ${props.filterBtnClass.completed}`}\n            onClick={handleFilter}\n          >\n            Completed\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst ThemeSwitcher = (props) => {\n  return (\n    <div className={`themeSwitchSection ${props.theme}`}>\n      <h2 className={`themeSwitchTitle ${props.theme}`}>Select A Theme:</h2>\n      <div className=\"themeSwitcher\">\n        <div\n          onClick={() => props.setTheme(\"theme_darkmode\")}\n          className=\"themeSwitcher__darkmode\"\n        ></div>\n        <div\n          onClick={() => props.setTheme(\"theme_darkblue\")}\n          className=\"themeSwitcher__darkblue\"\n        ></div>\n        <div\n          onClick={() => props.setTheme(\"theme_grey\")}\n          className=\"themeSwitcher__grey\"\n        ></div>\n        <div\n          onClick={() => props.setTheme(\"theme_midblue\")}\n          className=\"themeSwitcher__midblue\"\n        ></div>\n        <div\n          onClick={() => props.setTheme(\"theme_red\")}\n          className=\"themeSwitcher__red\"\n        ></div>\n        <div\n          onClick={() => props.setTheme(\"theme_purple\")}\n          className=\"themeSwitcher__purple\"\n        ></div>\n        <div\n          onClick={() => props.setTheme(\"theme_orange\")}\n          className=\"themeSwitcher__orange\"\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport { nanoid } from \"nanoid\";\n\n// Components\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\nimport Filter from \"./components/Filter\";\nimport ThemeSwitcher from \"./components/ThemeSwitcher\";\n\nfunction App() {\n  // State\n  const [input, setInput] = useState(\"\");\n  const [toDoList, setToDoList] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [filteredList, setFilteredList] = useState([]);\n  const [filterBtnClass, setFilterBtnClass] = useState({\n    all: \"__active\",\n    active: \"\",\n    completed: \"\",\n  });\n  const [theme, setTheme] = useState(\"theme_darkblue\");\n\n  return (\n    <div className={`App ${theme}`}>\n      <h1 className={`title ${theme}`}>Obligatory React To-Do List</h1>\n      <Form\n        input={input}\n        setInput={setInput}\n        toDoList={toDoList}\n        setToDoList={setToDoList}\n        theme={theme}\n      />\n      <Filter\n        filter={filter}\n        setFilter={setFilter}\n        filterBtnClass={filterBtnClass}\n        setFilterBtnClass={setFilterBtnClass}\n        setFilteredList={setFilteredList}\n        toDoList={toDoList}\n        theme={theme}\n      />\n\n      <ToDoList\n        toDoList={toDoList}\n        setToDoList={setToDoList}\n        filteredList={filteredList}\n        theme={theme}\n      />\n\n      <ThemeSwitcher theme={theme} setTheme={setTheme} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}